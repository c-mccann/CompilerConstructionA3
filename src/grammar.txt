S           ::=     begin Decls Lines end
Decls       ::=     Decl Decls2
Decls2      ::=     Decl    |   epsilon
Decl        ::=     X Vars ;
X           ::=     int |   bool
Vars        ::=     id Vars2
Vars2       ::=     , Vars  |   epsilon
Lines       ::=     Stmt Lines2
Lines2      ::=     ; Lines   |   epsilon
Stmt        ::=     Assn    |   Ifstmt
Assn        ::=     id := Y
Y           ::=     Expr Y2 |   true    |   false
Y2          ::=     Q Expr  |   epsilon
Expr        ::=     Term Expr2
Expr2       ::=     Z Term Expr2    |   epsilon
Z           ::=     +   |   -
Term        ::=     Factor Term2
Term2       ::=     * Factor Term2  |   epsilon
Factor      ::=     id  |   num
Ifstmt      ::=     if Test then Assn else Assn
Test        ::=     Expr Test2 |   true    |   false
Test2       ::=     Q Expr
Q           ::=     =   |   >   |   <





