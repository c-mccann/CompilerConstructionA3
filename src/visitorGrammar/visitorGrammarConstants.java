/* Generated By:JJTree&JavaCC: Do not edit this line. visitorGrammarConstants.java */
package visitorGrammar;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface visitorGrammarConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int BEGIN = 5;
  /** RegularExpression Id. */
  int END = 6;
  /** RegularExpression Id. */
  int INT = 7;
  /** RegularExpression Id. */
  int SEMIC = 8;
  /** RegularExpression Id. */
  int BOOL = 9;
  /** RegularExpression Id. */
  int COMMA = 10;
  /** RegularExpression Id. */
  int ASSIGN = 11;
  /** RegularExpression Id. */
  int PLUS = 12;
  /** RegularExpression Id. */
  int MINUS = 13;
  /** RegularExpression Id. */
  int MULT = 14;
  /** RegularExpression Id. */
  int NUM = 15;
  /** RegularExpression Id. */
  int DIGIT = 16;
  /** RegularExpression Id. */
  int IF = 17;
  /** RegularExpression Id. */
  int THEN = 18;
  /** RegularExpression Id. */
  int ELSE = 19;
  /** RegularExpression Id. */
  int EQUAL = 20;
  /** RegularExpression Id. */
  int GTHAN = 21;
  /** RegularExpression Id. */
  int LTHAN = 22;
  /** RegularExpression Id. */
  int TRUE = 23;
  /** RegularExpression Id. */
  int FALSE = 24;
  /** RegularExpression Id. */
  int ID = 25;
  /** RegularExpression Id. */
  int ALPHA = 26;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"begin\"",
    "\"end\"",
    "\"int\"",
    "\";\"",
    "\"bool\"",
    "\",\"",
    "\":=\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "<NUM>",
    "<DIGIT>",
    "\"if\"",
    "\"then\"",
    "\"else\"",
    "\"=\"",
    "\">\"",
    "\"<\"",
    "\"true\"",
    "\"false\"",
    "<ID>",
    "<ALPHA>",
  };

}
